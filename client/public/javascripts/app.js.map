{"version":3,"sources":["app/application.coffee","app/collections/daily_notes.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/crypto.coffee","app/lib/request.coffee","app/lib/view_collection.coffee","app/models/daily_note.coffee","app/router.coffee","app/views/app_view.coffee","app/views/daily_note.coffee","app/views/daily_note_widget.coffee","app/views/daily_notes.coffee","app/views/key_widget.coffee","app/views/state.coffee","app/views/templates/daily_note.jade","app/views/templates/daily_note_widget.coffee","app/views/templates/daily_note_widget.jade","app/views/templates/home.jade","app/views/templates/key_management_widget.jade"],"names":[],"mappings":"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","file":"public/javascripts/app.js","sourcesContent":["crypto = require 'lib/crypto'\n\nmodule.exports =\n\n\n    initialize: ->\n        window.app = this\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        Backbone.history.start()\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n\n","module.exports = class DailyNotesCollection extends Backbone.Collection\n    url: 'daily-notes'\n\n","app = require 'application'\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    app.initialize()\n\n","(->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n","# Base component to build widgets.\nmodule.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n        @render()\n\n    getRenderData: ->\n        model: @model?.toJSON()\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n\n    showLoading: ->\n        @$('.spinner').show()\n\n    hideLoading: ->\n        @$('.spinner').hide()\n\n","crypto = window.crypto\n\nencoder = new TextEncoder(\"utf-8\")\ndecoder = new TextDecoder(\"utf-8\")\n\nmodule.exports = simpleCrypto =\n\n\n    stringToArrayBuffer: (str) ->\n        #return encoder.encode str\n        buf = new ArrayBuffer str.length\n        bufView = new Uint8Array buf\n        for i in [0..str.length]\n            bufView[i] = str.charCodeAt(i)\n        return bufView\n\n\n    arrayBufferToString: (buffer) ->\n        #return decoder.decode buffer\n        return String.fromCharCode.apply(null, new Uint8Array(buffer))\n\n\n    createNewVector: ->\n        crypto.getRandomValues new Uint8Array 16\n\n\n    createKey: (password) ->\n        salt = \"556392fd2f545ef8f456faa0e065f7a\"\n        iterations = 100\n        hash = \"SHA-256\"\n        passBuffer = simpleCrypto.stringToArrayBuffer password\n        saltBuffer = simpleCrypto.stringToArrayBuffer salt\n\n        crypto.subtle.importKey(\n            \"raw\",\n            passBuffer,\n            name: \"PBKDF2\",\n            false,\n            [\"deriveKey\"]\n        ).then((baseKey) =>\n            opts =\n                name: \"PBKDF2\"\n                salt: saltBuffer\n                iterations: iterations\n                hash: hash\n\n            algo =\n                name: \"AES-CBC\"\n                length: 256\n\n            return crypto.subtle.deriveKey(\n                opts, baseKey, algo, true, [\"encrypt\", \"decrypt\"])\n        ).catch( (err) ->\n            console.log 'An error occured while generating encryption key'\n            console.log err\n        )\n\n\n    encrypt: (text, key, vector) ->\n        opts =\n            name: 'AES-CBC'\n            iv: vector\n        textBuffer = simpleCrypto.stringToArrayBuffer text\n\n        crypto.subtle.encrypt(opts, key, textBuffer)\n        .then (result) ->\n            new Promise (resolve, reject) ->\n                resolve simpleCrypto.arrayBufferToString result\n\n\n    decrypt: (cipher, key, vector) ->\n        opts =\n            name: 'AES-CBC'\n            iv: vector\n\n        crypto.subtle.decrypt(opts, key, cipher)\n        .then (result) ->\n            console.log 'result', result\n            new Promise (resolve, reject) ->\n                console.log 'result', result\n                resolve simpleCrypto.arrayBufferToString result\n\n\n    createEncrypter: (key) ->\n        new Encrypter key\n\n\n","# Make ajax request more easy to do.\n# Expected callbacks: success and error\nexports.request = (type, url, data, callback) ->\n    $.ajax\n        type: type\n        url: url\n        data: if data? then JSON.stringify data else null\n        contentType: \"application/json\"\n        dataType: \"json\"\n        success: (data) ->\n            callback null, data if callback?\n        error: (data) ->\n            if data? and data.msg? and callback?\n                callback new Error data.msg\n            else if callback?\n                callback new Error \"Server error occured\"\n\n# Sends a get request with data as body\n# Expected callbacks: success and error\nexports.get = (url, callback) ->\n    exports.request \"GET\", url, null, callback\n\n# Sends a post request with data as body\n# Expected callbacks: success and error\nexports.post = (url, data, callback) ->\n    exports.request \"POST\", url, data, callback\n\n# Sends a put request with data as body\n# Expected callbacks: success and error\nexports.put = (url, data, callback) ->\n    exports.request \"PUT\", url, data, callback\n\n# Sends a delete request with data as body\n# Expected callbacks: success and error\nexports.del = (url, callback) ->\n    exports.request \"DELETE\", url, null, callback\n\n","BaseView = require 'lib/base_view'\n\n\n# Base view widget to display/manage list of data.\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        if not @collectionEl?\n            collectionEl = @el\n\n        super\n        @views = {}\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        @render()\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        super\n        @$collectionEl = $(@collectionEl)\n\n    renderAll: =>\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views\n\n","module.exports = class DailyNote extends Backbone.Model\n\n    urlRoot: 'daily-notes'\n\n    constructor: ->\n        super\n        @set 'id',  @get('date').format('YYYY-MM-DD')\n","AppView = require 'views/app_view'\n\n\nmodule.exports = class Router extends Backbone.Router\n\n\n    routes:\n        '': 'main'\n        'archives': 'archives'\n        'key': 'key'\n        ':date': 'note'\n\n\n    main: ->\n        day = moment()\n        @navigate day.format('YYYY-MM-DD'), trigger: true\n\n\n    key: ->\n        @displayWidget 'key'\n\n\n    archives: ->\n        @displayWidget 'archives'\n\n\n    note: (date) ->\n        @displayWidget 'dailyNote', date\n\n\n    displayWidget: (view, date) ->\n        @mainView ?= new AppView()\n        @mainView.showWidget view, date\n\n","\nBaseView = require '../lib/base_view'\nState = require './state'\nDailyNote = require '../models/daily_note'\nDailyNotes = require './daily_notes'\nDailyNoteWidget = require './daily_note_widget'\nKeyWidget = require './key_widget'\n\n\n# Represents main view, the one that builds widgets and display them\n# depending on state given by the router.\n# Sets window listeners to adapte the UI when resize occurs and to save current\n# writing when the window is closed.\nmodule.exports = class AppView extends BaseView\n\n    el: 'body.application'\n    template: require('./templates/home')\n\n\n    getRenderData: ->\n        date: moment().format 'DD/MM/YYYY'\n\n\n    # After the main view is rendered, it builds the daily note widget\n    # that allows the user to write his note.\n    afterRender: ->\n        @widgets = $ '.widget'\n\n        @noteWidget = new DailyNoteWidget\n        $(window).resize @noteWidget.resizeTextArea\n        $(window).on 'unload', @noteWidget.saveNote\n\n        @archivesWidget = $ '#archives'\n        @keyWidget = new KeyWidget\n        @notes = new DailyNotes\n\n\n    # Display given widget (note editor, note list...)\n    showWidget: (widget, date) ->\n        @widgets.hide()\n\n        if State.key? or widget is 'key'\n            @[widget] date\n        else\n            window.app.router.navigate 'key', trigger: true\n\n\n    # Load an display given note.\n    dailyNote: (day) ->\n        if day?\n            day = moment(day).startOf 'day'\n        else\n            day = moment().startOf 'day'\n\n        dayValue = \"#{day.format 'YYYY-MM-DDT00:00:00.000'}Z\"\n        note = @notes.collection.findWhere\n            date: dayValue\n\n        if note?\n            note.set 'id',  day.format('YYYY-MM-DD')\n            @noteWidget.show note\n        else\n            note ?= new DailyNote date: day\n            note.fetch\n                success: (model) =>\n                    note.set 'id',  day.format('YYYY-MM-DD')\n                    @noteWidget.show note\n                error: (model) =>\n                    @noteWidget.show model\n\n\n    # Show archives widget.\n    archives: ->\n        @archivesWidget.show()\n\n\n    key: ->\n        @keyWidget.show()\n\n","BaseView = require '../lib/base_view'\n\n\n# Represents a note displayed in the archive list.\nmodule.exports = class DailyNoteView extends BaseView\n    template: require './templates/daily_note'\n    className: 'daily-note'\n\n\n    # Set a max length for text attribute before rendering the line.\n    getRenderData: ->\n        date = moment(@model.get 'date').startOf 'day'\n        data =\n            date: date.format 'YYYY-MM-DD'\n            text: @model.get 'text'\n\n        data.displayDate = moment(data.date).format 'll'\n        maxLength = 80\n        if data.text?.length > maxLength\n            data.text = \"#{data.text.substring 0, maxLength}...\"\n\n        data\n\n","BaseView = require '../lib/base_view'\nsimpleCrypto = require '../lib/crypto'\nState = require './state'\n\n\nmodule.exports = class DailyNoteWidget extends BaseView\n    el: '#daily-note'\n    template: require './templates/daily_note_widget'\n\n\n    events:\n        'click .remove': 'deleteNote'\n\n\n    afterRender: ->\n        @textField = @$ 'textarea'\n        @dateField = @$ '.date-field'\n        @isSaving = false\n        @previousContent = ''\n\n\n    # Save note to database. Encrypt content before updating the model and\n    # saving. That way only encrypted content is stored on the server.\n    saveNote: =>\n        content = @textField.val()\n        vector = simpleCrypto.createNewVector()\n\n        unless content is @previousContent\n            simpleCrypto.encrypt(content, State.key, vector)\n            .then( (encryptedContent) =>\n                @previousContent = content\n                @model.set\n                    content: encryptedContent\n                    vector: simpleCrypto.arrayBufferToString vector\n                @model.save()\n            )\n\n\n    # Delete current note.\n    deleteNote: =>\n        @model.destroy()\n        Backbone.history.navigate 'archives', trigger: true\n\n\n    # Resize text area (useful when window is resized).\n    resizeTextArea: ->\n        @textField?.height $(window).height() - 180\n\n\n    # Display current widget for given day.\n    # Reload text, if the widget is already visible.\n    # Decrypt content is content comes from the model. Data are stored\n    # encrypted, so decryption is required.\n    show: (note) ->\n        @model = note\n\n        @_showEl()\n\n        encryptedContent = @model.get('content') or ''\n        vector = @model.get('vector') or ''\n\n        if encryptedContent.length is 0 or vector.length is 0\n            @_showContent content\n        else\n            cipherBuffer = simpleCrypto.stringToArrayBuffer encryptedContent\n            vector = simpleCrypto.stringToArrayBuffer vector\n\n            simpleCrypto.decrypt(cipherBuffer, State.key, vector)\n            .then(@_showContent)\n            .catch (err) =>\n                console.log err\n                alert '''\nAn error occured will decrypting your message. Is your key right?'''\n                @_showContent ''\n\n        clearInterval @saveInterval\n        @saveInterval = setInterval @saveNote, 1000\n\n\n    # Fill content with given text and focus on the text area.\n    _showContent: (text) =>\n        text = '' unless typeof(text) is 'string'\n        @textField.val text\n        @dateField.html moment(@model.get 'date').format 'll'\n\n        @_hideLoading()\n        @_focusTextarea()\n\n\n    # Focus on given text area.\n    _focusTextarea: ->\n        @textField.focus()\n        len = @textField.val().length\n        @textField[0].setSelectionRange len, len\n\n\n    # Show element.\n    _showEl: ->\n        @resizeTextArea()\n        @$el.show()\n\n\n    _showLoading: ->\n        @$('.spinner').show()\n\n\n    _hideLoading: ->\n        @$('.spinner').hide()\n\n","ViewCollection = require '../lib/view_collection'\nDailyNotesCollection = require '../collections/daily_notes'\nDailyNoteView = require './daily_note'\n\n\n# Represents the archive note list.\nmodule.exports = class DailyNotesView extends ViewCollection\n    el: '#daily-notes'\n    collectionEl: '#daily-notes'\n\n    collection: new DailyNotesCollection()\n    itemview: DailyNoteView\n\n    # Set events:\n    # * Render the whole list if the collections is reset.\n    # * Render one line if the an element is added.\n    afterRender: ->\n        @collection.on 'reset', @renderAll\n        @collection.on 'add', @renderOne\n\n        @collection.fetch\n            success: (models) ->\n                console.log models\n\n","BaseView = require '../lib/base_view'\nState = require './state'\nsimpleCrypto = require '../lib/crypto'\n\nmodule.exports = class KeyManagementWidget extends BaseView\n    el: '#key-management'\n    template: require './templates/key_management_widget'\n\n\n    events:\n        'click button': 'onUseKeyClicked'\n        'keyup input': 'onTextKeyUp'\n\n\n    afterRender: ->\n        @textField = @$ '#key-field'\n        @useKeyButton = @$ 'button'\n        @textField.focus()\n\n\n    onTextKeyUp: (event) ->\n        @onUseKeyClicked() if 13 in [event.keyCode, event.which]\n\n\n    onUseKeyClicked: ->\n        @showLoading()\n        passphrase =  @textField.val()\n        simpleCrypto.createKey('passphrase')\n        .then( (key) =>\n            State.key = key\n            @hideLoading()\n\n            alert(\n                'Key registered. You are now ready to use Hari!'\n            )\n            @textField.val null\n            window.app.router.navigate '', trigger: true\n        )\n\n\n    show: ->\n        State.key = null\n        @$el.show()\n        @useKeyButton.val null\n\n","\nmodule.exports = class State\n\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\nvar locals_ = (locals || {}),date = locals_.date,displayDate = locals_.displayDate,text = locals_.text;\nbuf.push(\"<!-- .daily_note --><a\" + (jade.attr(\"href\", \"#\" + (date) + \"\", true, false)) + \" class=\\\"action\\\"><span class=\\\"date\\\">\" + (jade.escape(null == (jade_interp = displayDate) ? \"\" : jade_interp)) + \"</span><span class=\\\"text\\\">\" + (jade.escape(null == (jade_interp = text) ? \"\" : jade_interp)) + \"</span></a>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","h2.date= date\ntextarea#note-area\n","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<h2 class=\\\"date\\\"><span class=\\\"date-field\\\"></span><span class=\\\"layout-right\\\"><a class=\\\"remove\\\">remove</a></span><img src=\\\"spinner.svg\\\" loading=\\\"loading\\\" indicator=\\\"indicator\\\" class=\\\"spinner\\\"/></h2><textarea id=\\\"note-area\\\"></textarea>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<div id=\\\"content\\\"><div id=\\\"menu\\\"><h1><a href=\\\"#\\\">Hari</a></h1><a href=\\\"#archives\\\">archives</a><a href=\\\"#key\\\" class=\\\"key-link\\\">lock</a><div></div></div><div id=\\\"daily-note\\\" class=\\\"widget\\\"></div><div id=\\\"archives\\\" class=\\\"widget\\\"><h2>Archives</h2><div id=\\\"daily-notes\\\"></div></div><div id=\\\"key-management\\\" class=\\\"widget\\\"></div></div>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<p>Welcome to Hari,</p><p>Hari is your Diary. All your daily stories are stored in your Cozy through\\nit. What makes it really different is that like any good diary, Hari can be\\nlocked. Yes, noone can ready your Diary without a key. How does it work?\\nIt's very simple software allows locking through the usage of encryption.</p><p>All your texts can be encrypted with a single text, called passphrase or\\nkey. It's you who decide which key you want to use.\\nSo, each time you connect, enter in the following field your encryption\\nkey. The first time you will enter it your key will be registered and use\\nto unencrypt your message. After it will be reused. </p><p>Remember that your key cannot be changed, lost or forgotten. So, be careful\\nwhen you chose it. But make it complex to be sure noone will guess it.\\nYour key will be required each time you connect on Hari. So, Your data\\ncannot be read without it.</p><p><input id=\\\"key-field\\\" type=\\\"password\\\"/></p><p><button class=\\\"unlock\\\">unlock</button></p>\");;return buf.join(\"\");\n};\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}"]}